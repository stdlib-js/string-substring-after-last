// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var t="function"==typeof Object.defineProperty?Object.defineProperty:null;var r=Object.defineProperty,e=Object.prototype,n=e.toString,o=e.__defineGetter__,i=e.__defineSetter__,u=e.__lookupGetter__,a=e.__lookupSetter__;var c=function(){try{return t({},"x",{}),!0}catch(t){return!1}}()?r:function(t,r,c){var l,f,p,b;if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. First argument must be an object. Value: `"+t+"`.");if("object"!=typeof c||null===c||"[object Array]"===n.call(c))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+c+"`.");if((f="value"in c)&&(u.call(t,r)||a.call(t,r)?(l=t.__proto__,t.__proto__=e,delete t[r],t[r]=c.value,t.__proto__=l):t[r]=c.value),p="get"in c,b="set"in c,f&&(p||b))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&o&&o.call(t,r,c.get),b&&i&&i.call(t,r,c.set),t};function l(t,r,e){c(t,r,{configurable:!1,enumerable:!1,writable:!1,value:e})}function f(t){return"number"==typeof t}var p="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function b(){return p&&"symbol"==typeof Symbol.toStringTag}var y=Object.prototype.toString;var s=Object.prototype.hasOwnProperty;var v="function"==typeof Symbol?Symbol.toStringTag:"";var _=b()?function(t){var r,e,n,o,i;if(null==t)return y.call(t);e=t[v],i=v,r=null!=(o=t)&&s.call(o,i);try{t[v]=void 0}catch(r){return y.call(t)}return n=y.call(t),r?t[v]=e:delete t[v],n}:function(t){return y.call(t)},m=Number,g=m.prototype.toString;var d=b();function j(t){return"object"==typeof t&&(t instanceof m||(d?function(t){try{return g.call(t),!0}catch(t){return!1}}(t):"[object Number]"===_(t)))}function h(t){return f(t)||j(t)}l(h,"isPrimitive",f),l(h,"isObject",j);var S=Number.POSITIVE_INFINITY,w=m.NEGATIVE_INFINITY,O=Math.floor;function I(t){return t<S&&t>w&&O(r=t)===r;var r}function P(t){return f(t)&&I(t)}function E(t){return j(t)&&I(t.valueOf())}function T(t){return P(t)||E(t)}function N(t){return"string"==typeof t}l(T,"isPrimitive",P),l(T,"isObject",E);var x=String.prototype.valueOf;var F=b();function V(t){return"object"==typeof t&&(t instanceof String||(F?function(t){try{return x.call(t),!0}catch(t){return!1}}(t):"[object String]"===_(t)))}function A(t){return N(t)||V(t)}function G(){var t,r=arguments,e=r[0],n="https://stdlib.io/e/"+e+"?";for(t=1;t<r.length;t++)n+="&arg[]="+encodeURIComponent(r[t]);return n}function k(t,r,e){var n;if(!N(t))throw new TypeError(G("1Pb3F,Ex",t));if(!N(r))throw new TypeError(G("1Pb39,Ey",r));if(arguments.length>2){if(!P(e))throw new TypeError(G("1Pb2m,L9",e));n=t.lastIndexOf(r,e)}else n=t.lastIndexOf(r);return-1===n?"":t.substring(n+r.length)}l(A,"isPrimitive",N),l(A,"isObject",V);export{k as default};
//# sourceMappingURL=mod.js.map
